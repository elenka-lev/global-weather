{"version":3,"file":"index.js","sources":["../src/main.js"],"sourcesContent":["import iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\nimport axios from \"axios\";\n\nconst BASE_URL_GEO = \"https://api.openweathermap.org/geo/1.0/direct\";\nconst API_KEY = \"25564df1c8dad9938ea89a52e68a0135\";\nconst WEATHER_API_URL = \"https://api.openweathermap.org/data/2.5/weather\";\n\nconst weatherGrid = document.querySelector(\".weather-grid\");\nconst form = document.querySelector(\".form\");\n\nform.addEventListener(\"submit\", async (event) => {\n  event.preventDefault();\n\n  const cityValue = form.elements.query.value.trim();\n\n  if (cityValue === \"\") {\n    iziToast.error({\n      title: \"\",\n      message: \"Please add city name!\",\n      position: \"topRight\",\n      backgroundColor: \"#EF4040\",\n      maxWidth: \"432px\",\n      messageColor: \"#fff\",\n      iconColor: \"#fff\",\n    });\n    return;\n  }\n  weatherGrid.innerHTML = \"\";\n  try {\n    await getWeatherForCity(cityValue);\n  } catch (error) {\n    console.log(error);\n    iziToast.error({\n      title: \"\",\n      message: \"Something went wrong. Please try again!\",\n      position: \"topRight\",\n      backgroundColor: \"#EF4040\",\n      maxWidth: \"432px\",\n      messageColor: \"#fff\",\n      iconColor: \"#fff\",\n    });\n  } finally {\n    form.reset();\n  }\n});\n\nasync function getCoordinates(cityName) {\n  try {\n    const params = {\n      appid: API_KEY,\n      q: cityName,\n      limit: 1,\n    };\n\n    const response = await axios.get(BASE_URL_GEO, { params });\n    const { lat, lon } = response.data[0];\n    return { lat, lon };\n  } catch (error) {\n    console.error(\"Ошибка получения координат:\", error);\n    throw error;\n  }\n}\nasync function getWeather({ lat, lon }) {\n  try {\n    const resp = await axios.get(WEATHER_API_URL, {\n      params: {\n        lat: lat,\n        lon: lon,\n        units: \"metric\",\n        appid: API_KEY,\n      },\n    });\n    const weatherData = resp.data;\n    return weatherData;\n  } catch (error) {\n    console.log(error);\n    throw error;\n  }\n}\nasync function getWeatherForCity(cityName) {\n  try {\n    const coordinates = await getCoordinates(cityName);\n    const weatherData = await getWeather(coordinates);\n    renderWeather(weatherData);\n  } catch (error) {\n    console.error(\"Ошибка при получении погоды для города:\", error);\n  }\n}\n\n//render\nfunction renderWeather(weatherData) {\n  const {\n    name,\n    main: { temp },\n    wind: { speed, deg },\n    weather: [{ description, icon }],\n  } = weatherData;\n  const weatherGrid = document.querySelector(\".weather-grid\");\n  const dataLoc = new Date().toLocaleDateString();\n  const markup = `<div class=\"wrapper\">\n            <section class=\"city\">\n                <div class=\"container\">\n                    <div class=\"city-info\">\n                        <ul class=\"today-main\">\n                            <li class=\"today-city\">${name}</li>\n                            <li class=\"today-date\">${dataLoc}</li>\n                        </ul>\n                    </div>\n                </div>\n            </section>\n\n            <section class=\"weather-info\">\n                <div class=\"container container-weather-info\">\n                    <div class=\"weather-wrap\">\n                        <ul class=\"weather-descr\">\n                            <li class=\"weather-degrees\">${Math.round(\n                              temp\n                            )} <span class=\"degrees\">°C</span></li>\n                            <li class=\"wind-speed\">${speed}<span class=\"speed\"> km/h</span></li>\n                            <li class=\"wind-direction\">${deg}°</li>\n                        </ul>\n                        <ul class=\"weather-forecast\">\n                            <li class=\"weather-icon\">\n                                <img src=\"http://openweathermap.org/img/wn/${icon}@2x.png\" alt=\"${description}\" class=\"icon\" width=\"240\" height=\"240\">\n                            </li>\n                            <li class=\"weather-condition\">${description}</li>\n                        </ul>\n                    </div>\n                </div>\n             </section>\n        </div>`;\n  weatherGrid.insertAdjacentHTML(\"beforeend\", markup);\n}"],"names":["BASE_URL_GEO","API_KEY","WEATHER_API_URL","weatherGrid","form","event","cityValue","iziToast","getWeatherForCity","error","getCoordinates","cityName","params","response","axios","lat","lon","getWeather","coordinates","weatherData","renderWeather","name","temp","speed","deg","description","icon","dataLoc","markup"],"mappings":"6vBAIA,MAAMA,EAAe,gDACfC,EAAU,mCACVC,EAAkB,kDAElBC,EAAc,SAAS,cAAc,eAAe,EACpDC,EAAO,SAAS,cAAc,OAAO,EAE3CA,EAAK,iBAAiB,SAAU,MAAOC,GAAU,CAC/CA,EAAM,eAAc,EAEpB,MAAMC,EAAYF,EAAK,SAAS,MAAM,MAAM,OAE5C,GAAIE,IAAc,GAAI,CACpBC,EAAS,MAAM,CACb,MAAO,GACP,QAAS,wBACT,SAAU,WACV,gBAAiB,UACjB,SAAU,QACV,aAAc,OACd,UAAW,MACjB,CAAK,EACD,MACD,CACDJ,EAAY,UAAY,GACxB,GAAI,CACF,MAAMK,EAAkBF,CAAS,CAClC,OAAQG,EAAO,CACd,QAAQ,IAAIA,CAAK,EACjBF,EAAS,MAAM,CACb,MAAO,GACP,QAAS,0CACT,SAAU,WACV,gBAAiB,UACjB,SAAU,QACV,aAAc,OACd,UAAW,MACjB,CAAK,CACL,QAAY,CACRH,EAAK,MAAK,CACX,CACH,CAAC,EAED,eAAeM,EAAeC,EAAU,CACtC,GAAI,CACF,MAAMC,EAAS,CACb,MAAOX,EACP,EAAGU,EACH,MAAO,CACb,EAEUE,EAAW,MAAMC,EAAM,IAAId,EAAc,CAAE,OAAAY,CAAM,CAAE,EACnD,CAAE,IAAAG,EAAK,IAAAC,CAAG,EAAKH,EAAS,KAAK,CAAC,EACpC,MAAO,CAAE,IAAAE,EAAK,IAAAC,EACf,OAAQP,EAAO,CACd,cAAQ,MAAM,8BAA+BA,CAAK,EAC5CA,CACP,CACH,CACA,eAAeQ,EAAW,CAAE,IAAAF,EAAK,IAAAC,GAAO,CACtC,GAAI,CAUF,OATa,MAAMF,EAAM,IAAIZ,EAAiB,CAC5C,OAAQ,CACN,IAAKa,EACL,IAAKC,EACL,MAAO,SACP,MAAOf,CACR,CACP,CAAK,GACwB,IAE1B,OAAQQ,EAAO,CACd,cAAQ,IAAIA,CAAK,EACXA,CACP,CACH,CACA,eAAeD,EAAkBG,EAAU,CACzC,GAAI,CACF,MAAMO,EAAc,MAAMR,EAAeC,CAAQ,EAC3CQ,EAAc,MAAMF,EAAWC,CAAW,EAChDE,EAAcD,CAAW,CAC1B,OAAQV,EAAO,CACd,QAAQ,MAAM,0CAA2CA,CAAK,CAC/D,CACH,CAGA,SAASW,EAAcD,EAAa,CAClC,KAAM,CACJ,KAAAE,EACA,KAAM,CAAE,KAAAC,CAAM,EACd,KAAM,CAAE,MAAAC,EAAO,IAAAC,CAAK,EACpB,QAAS,CAAC,CAAE,YAAAC,EAAa,KAAAC,EAAM,CAChC,EAAGP,EACEhB,EAAc,SAAS,cAAc,eAAe,EACpDwB,EAAU,IAAI,KAAM,EAAC,mBAAkB,EACvCC,EAAS;AAAA;AAAA;AAAA;AAAA;AAAA,qDAKoCP,CAAI;AAAA,qDACJM,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0DAUF,KAAK,MACjCL,CAC9B,CAA6B;AAAA,qDACwBC,CAAK;AAAA,yDACDC,CAAG;AAAA;AAAA;AAAA;AAAA,6EAIiBE,CAAI,iBAAiBD,CAAW;AAAA;AAAA,4DAEjDA,CAAW;AAAA;AAAA;AAAA;AAAA;AAAA,gBAMrEtB,EAAY,mBAAmB,YAAayB,CAAM,CACpD"}